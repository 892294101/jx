{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      image: '',\n      rules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }],\n        image: [{\n          required: true,\n          message: \"请输入验证码\",\n          trigger: \"blur\"\n        }]\n      },\n      loginForm: {\n        username: '',\n        password: '',\n        image: '',\n        idKey: ''\n      }\n    };\n  },\n  methods: {\n    // 获取验证码\n    async getCaptcha() {\n      const {\n        data: res\n      } = await this.$api.captcha();\n      // console.log(\"获取验证码res数据：\", res)\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.image = res.data.image;\n        this.loginForm.idKey = res.data.idKey;\n      }\n    },\n    // 登录\n    loginBtn() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (valid) {\n          const {\n            data: res\n          } = await this.$api.login(this.loginForm);\n          // console.log(\"获取登录的res数据\", res)\n          if (res.code !== 200) {\n            this.$message.error(res.message);\n            await this.getCaptcha();\n            this.loginForm = {\n              username: '',\n              password: '',\n              image: '',\n              idKey: ''\n            };\n            this.$refs.usernameRef.focus();\n          } else {\n            this.$message.success({\n              message: \"登录成功\",\n              center: true\n            });\n            this.$store.commit('saveSysAdmin', res.data.sysAdmin);\n            this.$store.commit('saveToken', res.data.token);\n            this.$store.commit('saveLeftMenuList', res.data.leftMenuList);\n            this.$store.commit('savePermissionList', res.data.permissionList);\n            await this.$router.push(\"/home\");\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    // 重置\n    resetLoginForm() {\n      this.getCaptcha();\n      this.$refs.loginFormRef.resetFields();\n    },\n    // 验证码输入实时效验值\n    checkCodeValidate(value) {\n      const reg = /^[0-9a-zA-Z]*$/;\n      if (reg.test(value)) {\n        return true;\n      } else {\n        this.loginForm.image = this.loginForm.image.replace(/[^a-zA-Z0-9]/g, \"\");\n      }\n    },\n    // 处理键盘事件\n    keyEnterHandle(event) {\n      if (event.keyCode !== undefined) {\n        if (event.keyCode == 13) {\n          this.loginBtn();\n        }\n      }\n    }\n  },\n  mounted() {\n    // 打开页面，自动焦点到username输入框\n    this.$refs.usernameRef.focus();\n    // 监听键盘按键\n    document.addEventListener(\"keydown\", this.keyEnterHandle, true);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"keydown\", this.keyEnterHandle, true);\n  },\n  created() {\n    this.getCaptcha();\n  }\n};","map":{"version":3,"names":["name","data","image","rules","username","required","message","trigger","password","loginForm","idKey","methods","getCaptcha","res","$api","captcha","code","$message","error","loginBtn","$refs","loginFormRef","validate","valid","login","usernameRef","focus","success","center","$store","commit","sysAdmin","token","leftMenuList","permissionList","$router","push","resetLoginForm","resetFields","checkCodeValidate","value","reg","test","replace","keyEnterHandle","event","keyCode","undefined","mounted","document","addEventListener","beforeDestroy","removeEventListener","created"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login_container\">\r\n    <div class=\"login_box\">\r\n      <el-form class=\"login_form\" ref=\"loginFormRef\" :rules=\"rules\" :model=\"loginForm\">\r\n        <div class=\"title\">松鼠后台管理系统</div>\r\n        <el-form-item prop=\"username\">\r\n          <el-input class=\"el-input-login\" ref=\"usernameRef\" prefix-icon=\"el-icon-user-solid\" placeholder=\"账号\" v-model=\"loginForm.username\" clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input placeholder=\"密码\" prefix-icon=\"el-icon-key\" maxlength=\"18\" v-model=\"loginForm.password\" clearable show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"image\">\r\n          <el-input placeholder=\"验证码\" @input=\"checkCodeValidate\" prefix-icon=\"el-icon-view\" style=\"width: 200px; float: left;\" minlength=\"4\" maxlength=\"4\" v-model=\"loginForm.image\" clearable/>\r\n          <el-image class=\"captchaImg\" style=\"width: 150px; float: left;\" :src=\"image\" @click=\"getCaptcha\"/>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-row :gutter=\"20\">\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-button type=\"primary\" class=\"login-but\" @click=\"loginBtn\">登录</el-button>\r\n            </el-col>\r\n            <el-col :span=\"12\" :offset=\"0\">\r\n              <el-button class=\"login-reset\" type=\"info\" @click=\"resetLoginForm\">重置</el-button>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      image: '',\r\n      rules: {\r\n        username: [{required: true, message: \"请输入账号\", trigger: \"blur\"}],\r\n        password: [{required: true, message: \"请输入密码\", trigger: \"blur\"}],\r\n        image: [{required: true, message: \"请输入验证码\", trigger: \"blur\"}]\r\n      },\r\n      loginForm: {\r\n        username: '',\r\n        password: '',\r\n        image: '',\r\n        idKey: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取验证码\r\n    async getCaptcha() {\r\n      const {data: res} = await this.$api.captcha()\r\n      // console.log(\"获取验证码res数据：\", res)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.image = res.data.image\r\n        this.loginForm.idKey = res.data.idKey\r\n      }\r\n    },\r\n    // 登录\r\n    loginBtn() {\r\n      this.$refs.loginFormRef.validate(async valid => {\r\n        if (valid) {\r\n          const {data: res} = await this.$api.login(this.loginForm)\r\n          // console.log(\"获取登录的res数据\", res)\r\n          if (res.code !== 200) {\r\n            this.$message.error(res.message)\r\n            await this.getCaptcha()\r\n            this.loginForm = {username: '', password: '', image: '', idKey: ''}\r\n            this.$refs.usernameRef.focus()\r\n          } else {\r\n            this.$message.success({message: \"登录成功\", center: true})\r\n            this.$store.commit('saveSysAdmin', res.data.sysAdmin)\r\n            this.$store.commit('saveToken', res.data.token)\r\n            this.$store.commit('saveLeftMenuList', res.data.leftMenuList)\r\n            this.$store.commit('savePermissionList', res.data.permissionList)\r\n            await this.$router.push(\"/home\")\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    // 重置\r\n    resetLoginForm() {\r\n      this.getCaptcha()\r\n      this.$refs.loginFormRef.resetFields()\r\n    },\r\n\r\n    // 验证码输入实时效验值\r\n    checkCodeValidate(value) {\r\n      const reg = /^[0-9a-zA-Z]*$/\r\n      if (reg.test(value)) {\r\n        return true\r\n      } else {\r\n        this.loginForm.image = this.loginForm.image.replace(/[^a-zA-Z0-9]/g, \"\")\r\n      }\r\n    },\r\n\r\n    // 处理键盘事件\r\n    keyEnterHandle(event) {\r\n      if (event.keyCode !== undefined) {\r\n        if (event.keyCode == 13) {\r\n          this.loginBtn()\r\n        }\r\n      }\r\n    }\r\n\r\n  },\r\n\r\n  mounted() {\r\n    // 打开页面，自动焦点到username输入框\r\n    this.$refs.usernameRef.focus()\r\n    // 监听键盘按键\r\n    document.addEventListener(\"keydown\", this.keyEnterHandle, true);\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"keydown\", this.keyEnterHandle, true);\r\n  },\r\n  created() {\r\n    this.getCaptcha()\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n.login_container {\r\n  background-image: url(\"../assets/image/background.png\");\r\n  background-size: cover;\r\n  height: 100%;\r\n}\r\n\r\n.login_box {\r\n  width: 400px;\r\n  height: 330px;\r\n  background-color: #fff;\r\n  border-radius: 1px;\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  border-radius: 8px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.login_form {\r\n  position: absolute;\r\n  bottom: 0;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n\r\n}\r\n\r\n.title {\r\n  color: white;\r\n  font-size: 23px;\r\n  line-height: 1.5;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n  font-weight: bold;\r\n  font-style: italic;\r\n}\r\n\r\n.captchaImg {\r\n  height: 38px;\r\n  width: 100%;\r\n  margin-left: 8px;\r\n  border: 0px solid rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.login-but {\r\n  width: 100%;\r\n  font-size: large;\r\n  opacity: 0.9;\r\n  background-image: linear-gradient(to right, #74ebd5 0%, #9face6 100%);\r\n}\r\n\r\n.login-reset {\r\n  width: 100%;\r\n  font-size: large;\r\n  opacity: 0.9;\r\n}\r\n\r\n::v-deep .el-input__inner {\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  box-sizing: border-box;\r\n  border: 1px solid rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n\r\n</style>"],"mappings":";AA+BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,KAAA;QACAC,QAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAL,KAAA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAE,SAAA;QACAL,QAAA;QACAI,QAAA;QACAN,KAAA;QACAQ,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,WAAA;MACA;QAAAX,IAAA,EAAAY;MAAA,eAAAC,IAAA,CAAAC,OAAA;MACA;MACA,IAAAF,GAAA,CAAAG,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAP,OAAA;MACA;QACA,KAAAJ,KAAA,GAAAW,GAAA,CAAAZ,IAAA,CAAAC,KAAA;QACA,KAAAO,SAAA,CAAAC,KAAA,GAAAG,GAAA,CAAAZ,IAAA,CAAAS,KAAA;MACA;IACA;IACA;IACAS,SAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA;YAAAtB,IAAA,EAAAY;UAAA,eAAAC,IAAA,CAAAU,KAAA,MAAAf,SAAA;UACA;UACA,IAAAI,GAAA,CAAAG,IAAA;YACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAP,OAAA;YACA,WAAAM,UAAA;YACA,KAAAH,SAAA;cAAAL,QAAA;cAAAI,QAAA;cAAAN,KAAA;cAAAQ,KAAA;YAAA;YACA,KAAAU,KAAA,CAAAK,WAAA,CAAAC,KAAA;UACA;YACA,KAAAT,QAAA,CAAAU,OAAA;cAAArB,OAAA;cAAAsB,MAAA;YAAA;YACA,KAAAC,MAAA,CAAAC,MAAA,iBAAAjB,GAAA,CAAAZ,IAAA,CAAA8B,QAAA;YACA,KAAAF,MAAA,CAAAC,MAAA,cAAAjB,GAAA,CAAAZ,IAAA,CAAA+B,KAAA;YACA,KAAAH,MAAA,CAAAC,MAAA,qBAAAjB,GAAA,CAAAZ,IAAA,CAAAgC,YAAA;YACA,KAAAJ,MAAA,CAAAC,MAAA,uBAAAjB,GAAA,CAAAZ,IAAA,CAAAiC,cAAA;YACA,WAAAC,OAAA,CAAAC,IAAA;UACA;QACA;UACA;QACA;MACA;IACA;IACA;IACAC,eAAA;MACA,KAAAzB,UAAA;MACA,KAAAQ,KAAA,CAAAC,YAAA,CAAAiB,WAAA;IACA;IAEA;IACAC,kBAAAC,KAAA;MACA,MAAAC,GAAA;MACA,IAAAA,GAAA,CAAAC,IAAA,CAAAF,KAAA;QACA;MACA;QACA,KAAA/B,SAAA,CAAAP,KAAA,QAAAO,SAAA,CAAAP,KAAA,CAAAyC,OAAA;MACA;IACA;IAEA;IACAC,eAAAC,KAAA;MACA,IAAAA,KAAA,CAAAC,OAAA,KAAAC,SAAA;QACA,IAAAF,KAAA,CAAAC,OAAA;UACA,KAAA3B,QAAA;QACA;MACA;IACA;EAEA;EAEA6B,QAAA;IACA;IACA,KAAA5B,KAAA,CAAAK,WAAA,CAAAC,KAAA;IACA;IACAuB,QAAA,CAAAC,gBAAA,iBAAAN,cAAA;EACA;EACAO,cAAA;IACAF,QAAA,CAAAG,mBAAA,iBAAAR,cAAA;EACA;EACAS,QAAA;IACA,KAAAzC,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}