{"ast":null,"code":"export default {\n  data() {\n    return {\n      queryParams: {},\n      postStatusList: [{\n        value: '1',\n        label: '启用'\n      }, {\n        value: '2',\n        label: '停用'\n      }],\n      loading: true,\n      postList: [],\n      total: 0,\n      addPostDialogVisible: false,\n      addPostFormRules: {\n        postName: [{\n          required: true,\n          message: '请输入岗位名称',\n          trigger: 'blur'\n        }],\n        postCode: [{\n          required: true,\n          message: '请输入岗位标识',\n          trigger: 'blur'\n        }],\n        postStatus: [{\n          required: true,\n          message: '请输入岗位状态',\n          trigger: 'blur'\n        }]\n      },\n      addPostForm: {\n        postName: '',\n        postCode: '',\n        postStatus: 1,\n        remark: ''\n      },\n      editPostDialogVisible: false,\n      editPostForm: {},\n      editPostFormRules: {\n        postName: [{\n          required: true,\n          message: '请输入岗位名称',\n          trigger: 'blur'\n        }],\n        postCode: [{\n          required: true,\n          message: '请输入岗位标识',\n          trigger: 'blur'\n        }],\n        postStatus: [{\n          required: true,\n          message: '请输入岗位状态',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      single: true,\n      multiple: true\n    };\n  },\n  methods: {\n    // 获取列表\n    async getPostList() {\n      this.loading = true;\n      const {\n        data: res\n      } = await this.$api.queryPostList(this.queryParams);\n      // console.log(\"res数据:\", res)\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.postList = res.data.list;\n        this.total = res.data.total;\n        this.loading = false;\n      }\n    },\n    // 搜索\n    handleQuery() {\n      this.getPostList();\n    },\n    // 重置\n    resetQuery() {\n      this.queryParams = {};\n      this.getPostList();\n      this.$message.success(\"重置成功\");\n    },\n    // pageSize\n    handleSizeChange(newSize) {\n      this.queryParams.pageSize = newSize;\n      this.getPostList();\n    },\n    // pageNum\n    handleCurrentChange(newPage) {\n      this.queryParams.pageNum = newPage;\n      this.getPostList();\n    },\n    // 岗位状态修改\n    async postUpdateStatus(row) {\n      let text = row.postStatus === 2 ? \"停用\" : \"启用\";\n      const confirmResult = await this.$confirm('确认要\"' + text + '\"\"' + row.postName + '\"岗位吗?', \"警告\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).catch(err => err);\n      if (confirmResult != 'confirm') {\n        await this.getPostList();\n        return this.$message.info('已取消修改');\n      }\n      await this.$api.updatePostStatus(row.id, row.postStatus);\n      return this.$message.success(text + \"成功\");\n      await this.getPostList();\n    },\n    // 监听对话框的关闭\n    addPostDialogClosed() {\n      this.$refs.addPostFormRefForm.resetFields();\n    },\n    // 新增操作\n    addPost() {\n      this.$refs.addPostFormRefForm.validate(async valid => {\n        if (!valid) return;\n        const {\n          data: res\n        } = await this.$api.addPost(this.addPostForm);\n        if (res.code !== 200) {\n          this.$message.error(res.message);\n        } else {\n          this.$message.success(\"新增岗位成功\");\n          this.addPostDialogVisible = false;\n          await this.getPostList();\n        }\n      });\n    },\n    // 显示编辑对话框\n    async handleUpdate(id) {\n      const {\n        data: res\n      } = await this.$api.postInfo(id);\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.editPostForm = res.data;\n        this.editPostDialogVisible = true;\n      }\n    },\n    // 监听编辑岗位对话框\n    editPostDialogClosed() {\n      this.$refs.editPostFormRefForm.resetFields();\n    },\n    // 修改岗位\n    editPost() {\n      this.$refs.editPostFormRefForm.validate(async valid => {\n        if (!valid) return;\n        const {\n          data: res\n        } = await this.$api.updatePost(this.editPostForm);\n        if (res.code !== 200) {\n          this.$message.error(res.message);\n        } else {\n          this.$message.success(\"修改岗位成功\");\n          this.editPostDialogVisible = false;\n          await this.getPostList();\n        }\n      });\n    },\n    // 删除岗位\n    async handleDelete(id) {\n      const confirmResult = await this.$confirm('是否确认删除岗位编号为\"' + id + '\"的数据项？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n      const {\n        data: res\n      } = await this.$api.deleteSysPost(id);\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.$message.success('删除成功');\n        await this.getPostList();\n      }\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 批量删除\n    async batchHandleDelete() {\n      const postIds = this.ids;\n      const confirmResult = await this.$confirm('是否确认删除岗位编号为\"' + postIds + '\"的数据项？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n      const {\n        data: res\n      } = await this.$api.batchDeleteSysPost(postIds);\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.$message.success('删除成功');\n        await this.getPostList();\n      }\n    },\n    // 菜单名称鼠标滑过打开\n    postNameMouseenter() {\n      const that = this;\n      that.$refs.EndTimeStatusRef.hidePicker();\n      that.$refs.BeginTimeStatusRef.hidePicker();\n      that.$refs.PostStatusRef.visible = false;\n    },\n    // 菜单状态鼠标滑过打开\n    postStatusMouseenter() {\n      const that = this;\n      that.$refs.PostStatusRef.visible = true;\n    },\n    // 开始时间鼠标滑过打开\n    beginTimeMouseenter() {\n      const that = this;\n      that.$refs.PostStatusRef.visible = false;\n      that.$refs.EndTimeStatusRef.hidePicker();\n      that.$refs.BeginTimeStatusRef.showPicker();\n    },\n    // 结束时间鼠标滑过打开\n    endTimeMouseenter() {\n      const that = this;\n      that.$refs.PostStatusRef.visible = false;\n      that.$refs.BeginTimeStatusRef.hidePicker();\n      that.$refs.EndTimeStatusRef.showPicker();\n    },\n    // 点击空白处关闭下拉框等\n    bodyCloseMenus(e) {\n      const that = this;\n      that.$refs.PostStatusRef.visible = false;\n    }\n  },\n  created() {\n    this.getPostList();\n  },\n  mounted() {\n    document.addEventListener(\"click\", this.bodyCloseMenus);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"click\", this.bodyCloseMenus);\n  }\n};","map":{"version":3,"names":["data","queryParams","postStatusList","value","label","loading","postList","total","addPostDialogVisible","addPostFormRules","postName","required","message","trigger","postCode","postStatus","addPostForm","remark","editPostDialogVisible","editPostForm","editPostFormRules","ids","single","multiple","methods","getPostList","res","$api","queryPostList","code","$message","error","list","handleQuery","resetQuery","success","handleSizeChange","newSize","pageSize","handleCurrentChange","newPage","pageNum","postUpdateStatus","row","text","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","info","updatePostStatus","id","addPostDialogClosed","$refs","addPostFormRefForm","resetFields","addPost","validate","valid","handleUpdate","postInfo","editPostDialogClosed","editPostFormRefForm","editPost","updatePost","handleDelete","deleteSysPost","handleSelectionChange","selection","map","item","length","batchHandleDelete","postIds","batchDeleteSysPost","postNameMouseenter","that","EndTimeStatusRef","hidePicker","BeginTimeStatusRef","PostStatusRef","visible","postStatusMouseenter","beginTimeMouseenter","showPicker","endTimeMouseenter","bodyCloseMenus","e","created","mounted","document","addEventListener","beforeDestroy","removeEventListener"],"sources":["src/views/base/Post.vue"],"sourcesContent":["<template>\r\n  <el-card>\r\n    <!---条件搜索-->\r\n    <el-form size=\"mini\" :model=\"queryParams\" :inline=\"true\">\r\n      <el-form-item label=\"岗位名称\" prop=\"postName\">\r\n        <el-input @mouseenter.native=\"postNameMouseenter\"  class=\"searchList\" placeholder=\"请输入岗位名称\" clearable size=\"mini\" v-model=\"queryParams.postName\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"岗位状态\" prop=\"postStatus\">\r\n        <el-select @mouseenter.native=\"postStatusMouseenter\" ref=\"PostStatusRef\" class=\"searchList\" size=\"mini\" placeholder=\"请选择岗位状态\" v-model=\"queryParams.postStatus\">\r\n          <el-option v-for=\"item in postStatusList\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\r\n          </el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item label=\"开始时间\" prop=\"beginTime\">\r\n        <el-date-picker id=\"beginTime\" @mouseenter.native=\"beginTimeMouseenter\" ref=\"BeginTimeStatusRef\"\r\n                        class=\"input-width\" size=\"mini\" type=\"date\" style=\"width: 135px;\" value-format=\"yyyy-MM-dd\"\r\n                        placeholder=\"请选择开始时间\" v-model=\"queryParams.beginTime\"/>\r\n      </el-form-item>\r\n      <el-form-item label=\"结束时间\" prop=\"endTime\">\r\n        <el-date-picker id=\"beginTime\" @mouseenter.native=\"beginTimeMouseenter\" ref=\"BeginTimeStatusRef\"\r\n                        class=\"input-width\" size=\"mini\" type=\"date\" style=\"width: 135px;\" value-format=\"yyyy-MM-dd\"\r\n                        placeholder=\"请选择结束时间\" v-model=\"queryParams.endTime\"/>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--操作按钮-->\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button plain type=\"primary\" icon=\"el-icon-plus\" size=\"mini\"\r\n                   @click=\"addPostDialogVisible = true\" v-authority=\"['base:post:add']\">新增\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button plain type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\"\r\n                   @click=\"batchHandleDelete\" v-authority=\"['base:post:delete']\">删除\r\n        </el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <!--列表-->\r\n    <el-table size=\"mini\" border stripe style=\"width: 100%;\" :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\"\r\n              v-loading=\"loading\" :data=\"postList\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\"/>\r\n      <el-table-column label=\"ID\" v-if=\"false\" prop=\"id\"/>\r\n      <el-table-column label=\"岗位名称\" prop=\"postName\"/>\r\n      <el-table-column label=\"岗位编码\" prop=\"postCode\"/>\r\n      <el-table-column label=\"岗位状态\" prop=\"postStatus\">\r\n        <template slot-scope=\"scope\">\r\n          <el-switch v-model=\"scope.row.postStatus\" :active-value=\"1\" :inactive-value=\"2\" active-color=\"#13ce66\"\r\n                     inactive-color=\"#F5222D\" active-text=\"启用\" inactive-text=\"停用\" @change=\"postUpdateStatus(scope.row)\">\r\n          </el-switch>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"创建时间\" prop=\"createTime\"/>\r\n      <el-table-column label=\"描述\" prop=\"remark\"/>\r\n      <el-table-column label=\"更多操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-edit\"\r\n                     @click=\"handleUpdate(scope.row.id)\" v-authority=\"['base:post:edit']\">编辑\r\n          </el-button>\r\n          <el-button type=\"text\" size=\"small\" icon=\"el-icon-delete\"\r\n                     @click=\"handleDelete(scope.row.id)\" v-authority=\"['base:post:delete']\">删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!--分页-->\r\n    <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                   :current-page=\"queryParams.pageNum\" :page-sizes=\"[10, 50, 100, 500, 1000]\" :page-size=\"queryParams.pageSize\"\r\n                   layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n    </el-pagination>\r\n    <!--新增对话框-->\r\n    <el-dialog title=\"新增岗位\" :visible.sync=\"addPostDialogVisible\" width=\"30%\" @close=\"addPostDialogClosed\">\r\n      <el-form label-width=\"80px\" ref=\"addPostFormRefForm\" :rules=\"addPostFormRules\" :model=\"addPostForm\">\r\n        <el-form-item label=\"岗位名称\" prop=\"postName\">\r\n          <el-input placeholder=\"请输入岗位名称\" v-model=\"addPostForm.postName\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"岗位编码\" prop=\"postCode\">\r\n          <el-input placeholder=\"请输入岗位编码\" v-model=\"addPostForm.postCode\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"岗位状态\" prop=\"postStatus\">\r\n          <el-radio-group v-model=\"addPostForm.postStatus\">\r\n            <el-radio :label=\"1\">启用</el-radio>\r\n            <el-radio :label=\"2\">停用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"岗位描述\" prop=\"remark\">\r\n          <el-input placeholder=\"请输入岗位描述\" v-model=\"addPostForm.remark\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"addPost\">确定</el-button>\r\n                <el-button type=\"primary\" @click=\"addPostDialogVisible = false\">取消</el-button>\r\n            </span>\r\n    </el-dialog>\r\n    <!--编辑对话框-->\r\n    <el-dialog title=\"编辑岗位\" :visible.sync=\"editPostDialogVisible\" width=\"30%\" @close=\"editPostDialogClosed\">\r\n      <el-form label-width=\"80px\" ref=\"editPostFormRefForm\" :rules=\"editPostFormRules\" :model=\"editPostForm\">\r\n        <el-form-item label=\"岗位名称\" prop=\"postName\">\r\n          <el-input placeholder=\"请输入岗位名称\" v-model=\"editPostForm.postName\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"岗位编码\" prop=\"postCode\">\r\n          <el-input placeholder=\"请输入岗位编码\" v-model=\"editPostForm.postCode\"/>\r\n        </el-form-item>\r\n        <el-form-item label=\"岗位状态\" prop=\"postStatus\">\r\n          <el-radio-group v-model=\"editPostForm.postStatus\">\r\n            <el-radio :label=\"1\">启用</el-radio>\r\n            <el-radio :label=\"2\">停用</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"岗位描述\" prop=\"remark\">\r\n          <el-input placeholder=\"请输入岗位描述\" v-model=\"editPostForm.remark\"/>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"editPost\">确定</el-button>\r\n                <el-button type=\"primary\" @click=\"editPostDialogVisible = false\">取消</el-button>\r\n            </span>\r\n    </el-dialog>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      queryParams: {},\r\n      postStatusList: [{\r\n        value: '1',\r\n        label: '启用'\r\n      }, {\r\n        value: '2',\r\n        label: '停用'\r\n      }],\r\n      loading: true,\r\n      postList: [],\r\n      total: 0,\r\n      addPostDialogVisible: false,\r\n      addPostFormRules: {\r\n        postName: [{required: true, message: '请输入岗位名称', trigger: 'blur'}],\r\n        postCode: [{required: true, message: '请输入岗位标识', trigger: 'blur'}],\r\n        postStatus: [{required: true, message: '请输入岗位状态', trigger: 'blur'}]\r\n      },\r\n      addPostForm: {\r\n        postName: '',\r\n        postCode: '',\r\n        postStatus: 1,\r\n        remark: ''\r\n      },\r\n      editPostDialogVisible: false,\r\n      editPostForm: {},\r\n      editPostFormRules: {\r\n        postName: [{required: true, message: '请输入岗位名称', trigger: 'blur'}],\r\n        postCode: [{required: true, message: '请输入岗位标识', trigger: 'blur'}],\r\n        postStatus: [{required: true, message: '请输入岗位状态', trigger: 'blur'}]\r\n      },\r\n      ids: [],\r\n      single: true,\r\n      multiple: true\r\n    }\r\n  },\r\n  methods: {\r\n    // 获取列表\r\n    async getPostList() {\r\n      this.loading = true\r\n      const {data: res} = await this.$api.queryPostList(this.queryParams)\r\n      // console.log(\"res数据:\", res)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.postList = res.data.list\r\n        this.total = res.data.total\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 搜索\r\n    handleQuery() {\r\n      this.getPostList()\r\n    },\r\n    // 重置\r\n    resetQuery() {\r\n      this.queryParams = {}\r\n      this.getPostList()\r\n      this.$message.success(\"重置成功\")\r\n    },\r\n    // pageSize\r\n    handleSizeChange(newSize) {\r\n      this.queryParams.pageSize = newSize\r\n      this.getPostList()\r\n    },\r\n    // pageNum\r\n    handleCurrentChange(newPage) {\r\n      this.queryParams.pageNum = newPage\r\n      this.getPostList()\r\n    },\r\n    // 岗位状态修改\r\n    async postUpdateStatus(row) {\r\n      let text = row.postStatus === 2 ? \"停用\" : \"启用\"\r\n      const confirmResult = await this.$confirm('确认要\"' + text + '\"\"' + row.postName + '\"岗位吗?', \"警告\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      }).catch(err => err)\r\n      if (confirmResult != 'confirm') {\r\n        await this.getPostList()\r\n        return this.$message.info('已取消修改')\r\n      }\r\n      await this.$api.updatePostStatus(row.id, row.postStatus)\r\n      return this.$message.success(text + \"成功\")\r\n      await this.getPostList()\r\n    },\r\n    // 监听对话框的关闭\r\n    addPostDialogClosed() {\r\n      this.$refs.addPostFormRefForm.resetFields()\r\n    },\r\n    // 新增操作\r\n    addPost() {\r\n      this.$refs.addPostFormRefForm.validate(async valid => {\r\n        if (!valid) return\r\n        const {data: res} = await this.$api.addPost(this.addPostForm)\r\n        if (res.code !== 200) {\r\n          this.$message.error(res.message)\r\n        } else {\r\n          this.$message.success(\"新增岗位成功\")\r\n          this.addPostDialogVisible = false\r\n          await this.getPostList()\r\n        }\r\n      })\r\n    },\r\n    // 显示编辑对话框\r\n    async handleUpdate(id) {\r\n      const {data: res} = await this.$api.postInfo(id)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.editPostForm = res.data\r\n        this.editPostDialogVisible = true\r\n      }\r\n    },\r\n    // 监听编辑岗位对话框\r\n    editPostDialogClosed() {\r\n      this.$refs.editPostFormRefForm.resetFields()\r\n    },\r\n    // 修改岗位\r\n    editPost() {\r\n      this.$refs.editPostFormRefForm.validate(async valid => {\r\n        if (!valid) return\r\n        const {data: res} = await this.$api.updatePost(this.editPostForm)\r\n        if (res.code !== 200) {\r\n          this.$message.error(res.message)\r\n        } else {\r\n          this.$message.success(\"修改岗位成功\")\r\n          this.editPostDialogVisible = false\r\n          await this.getPostList()\r\n        }\r\n      })\r\n    },\r\n    // 删除岗位\r\n    async handleDelete(id) {\r\n      const confirmResult = await this.$confirm('是否确认删除岗位编号为\"' + id + '\"的数据项？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      const {data: res} = await this.$api.deleteSysPost(id)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.$message.success('删除成功')\r\n        await this.getPostList()\r\n      }\r\n    },\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.id);\r\n      this.single = selection.length != 1;\r\n      this.multiple = !selection.length;\r\n    },\r\n    // 批量删除\r\n    async batchHandleDelete() {\r\n      const postIds = this.ids\r\n      const confirmResult = await this.$confirm('是否确认删除岗位编号为\"' + postIds + '\"的数据项？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      const {data: res} = await this.$api.batchDeleteSysPost(postIds)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.$message.success('删除成功')\r\n        await this.getPostList()\r\n      }\r\n    },\r\n    // 菜单名称鼠标滑过打开\r\n    postNameMouseenter() {\r\n      const that = this\r\n      that.$refs.EndTimeStatusRef.hidePicker()\r\n      that.$refs.BeginTimeStatusRef.hidePicker()\r\n      that.$refs.PostStatusRef.visible = false\r\n    },\r\n\r\n    // 菜单状态鼠标滑过打开\r\n    postStatusMouseenter() {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = true\r\n    },\r\n    // 开始时间鼠标滑过打开\r\n    beginTimeMouseenter() {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = false\r\n      that.$refs.EndTimeStatusRef.hidePicker()\r\n      that.$refs.BeginTimeStatusRef.showPicker()\r\n    },\r\n    // 结束时间鼠标滑过打开\r\n    endTimeMouseenter() {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = false\r\n      that.$refs.BeginTimeStatusRef.hidePicker()\r\n      that.$refs.EndTimeStatusRef.showPicker()\r\n    },\r\n    // 点击空白处关闭下拉框等\r\n    bodyCloseMenus(e) {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = false\r\n    },\r\n\r\n  },\r\n  created() {\r\n    this.getPostList()\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"click\", this.bodyCloseMenus)\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"click\", this.bodyCloseMenus);\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"],"mappings":"AA6HA;EACAA,KAAA;IACA;MACAC,WAAA;MACAC,cAAA;QACAC,KAAA;QACAC,KAAA;MACA;QACAD,KAAA;QACAC,KAAA;MACA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,oBAAA;MACAC,gBAAA;QACAC,QAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,UAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAG,WAAA;QACAN,QAAA;QACAI,QAAA;QACAC,UAAA;QACAE,MAAA;MACA;MACAC,qBAAA;MACAC,YAAA;MACAC,iBAAA;QACAV,QAAA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAC,QAAA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;QACAE,UAAA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MACA;MACAQ,GAAA;MACAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,YAAA;MACA,KAAApB,OAAA;MACA;QAAAL,IAAA,EAAA0B;MAAA,eAAAC,IAAA,CAAAC,aAAA,MAAA3B,WAAA;MACA;MACA,IAAAyB,GAAA,CAAAG,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAd,OAAA;MACA;QACA,KAAAN,QAAA,GAAAoB,GAAA,CAAA1B,IAAA,CAAAgC,IAAA;QACA,KAAAzB,KAAA,GAAAmB,GAAA,CAAA1B,IAAA,CAAAO,KAAA;QACA,KAAAF,OAAA;MACA;IACA;IACA;IACA4B,YAAA;MACA,KAAAR,WAAA;IACA;IACA;IACAS,WAAA;MACA,KAAAjC,WAAA;MACA,KAAAwB,WAAA;MACA,KAAAK,QAAA,CAAAK,OAAA;IACA;IACA;IACAC,iBAAAC,OAAA;MACA,KAAApC,WAAA,CAAAqC,QAAA,GAAAD,OAAA;MACA,KAAAZ,WAAA;IACA;IACA;IACAc,oBAAAC,OAAA;MACA,KAAAvC,WAAA,CAAAwC,OAAA,GAAAD,OAAA;MACA,KAAAf,WAAA;IACA;IACA;IACA,MAAAiB,iBAAAC,GAAA;MACA,IAAAC,IAAA,GAAAD,GAAA,CAAA5B,UAAA;MACA,MAAA8B,aAAA,cAAAC,QAAA,UAAAF,IAAA,UAAAD,GAAA,CAAAjC,QAAA;QACAqC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA,IAAAN,aAAA;QACA,WAAApB,WAAA;QACA,YAAAK,QAAA,CAAAsB,IAAA;MACA;MACA,WAAAzB,IAAA,CAAA0B,gBAAA,CAAAV,GAAA,CAAAW,EAAA,EAAAX,GAAA,CAAA5B,UAAA;MACA,YAAAe,QAAA,CAAAK,OAAA,CAAAS,IAAA;MACA,WAAAnB,WAAA;IACA;IACA;IACA8B,oBAAA;MACA,KAAAC,KAAA,CAAAC,kBAAA,CAAAC,WAAA;IACA;IACA;IACAC,QAAA;MACA,KAAAH,KAAA,CAAAC,kBAAA,CAAAG,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA;UAAA7D,IAAA,EAAA0B;QAAA,eAAAC,IAAA,CAAAgC,OAAA,MAAA3C,WAAA;QACA,IAAAU,GAAA,CAAAG,IAAA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAd,OAAA;QACA;UACA,KAAAkB,QAAA,CAAAK,OAAA;UACA,KAAA3B,oBAAA;UACA,WAAAiB,WAAA;QACA;MACA;IACA;IACA;IACA,MAAAqC,aAAAR,EAAA;MACA;QAAAtD,IAAA,EAAA0B;MAAA,eAAAC,IAAA,CAAAoC,QAAA,CAAAT,EAAA;MACA,IAAA5B,GAAA,CAAAG,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAd,OAAA;MACA;QACA,KAAAO,YAAA,GAAAO,GAAA,CAAA1B,IAAA;QACA,KAAAkB,qBAAA;MACA;IACA;IACA;IACA8C,qBAAA;MACA,KAAAR,KAAA,CAAAS,mBAAA,CAAAP,WAAA;IACA;IACA;IACAQ,SAAA;MACA,KAAAV,KAAA,CAAAS,mBAAA,CAAAL,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA;UAAA7D,IAAA,EAAA0B;QAAA,eAAAC,IAAA,CAAAwC,UAAA,MAAAhD,YAAA;QACA,IAAAO,GAAA,CAAAG,IAAA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAd,OAAA;QACA;UACA,KAAAkB,QAAA,CAAAK,OAAA;UACA,KAAAjB,qBAAA;UACA,WAAAO,WAAA;QACA;MACA;IACA;IACA;IACA,MAAA2C,aAAAd,EAAA;MACA,MAAAT,aAAA,cAAAC,QAAA,kBAAAQ,EAAA;QACAP,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA,IAAAN,aAAA;QACA,YAAAf,QAAA,CAAAsB,IAAA;MACA;MACA;QAAApD,IAAA,EAAA0B;MAAA,eAAAC,IAAA,CAAA0C,aAAA,CAAAf,EAAA;MACA,IAAA5B,GAAA,CAAAG,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAd,OAAA;MACA;QACA,KAAAkB,QAAA,CAAAK,OAAA;QACA,WAAAV,WAAA;MACA;IACA;IACA;IACA6C,sBAAAC,SAAA;MACA,KAAAlD,GAAA,GAAAkD,SAAA,CAAAC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAnB,EAAA;MACA,KAAAhC,MAAA,GAAAiD,SAAA,CAAAG,MAAA;MACA,KAAAnD,QAAA,IAAAgD,SAAA,CAAAG,MAAA;IACA;IACA;IACA,MAAAC,kBAAA;MACA,MAAAC,OAAA,QAAAvD,GAAA;MACA,MAAAwB,aAAA,cAAAC,QAAA,kBAAA8B,OAAA;QACA7B,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAA,GAAA;MACA,IAAAN,aAAA;QACA,YAAAf,QAAA,CAAAsB,IAAA;MACA;MACA;QAAApD,IAAA,EAAA0B;MAAA,eAAAC,IAAA,CAAAkD,kBAAA,CAAAD,OAAA;MACA,IAAAlD,GAAA,CAAAG,IAAA;QACA,KAAAC,QAAA,CAAAC,KAAA,CAAAL,GAAA,CAAAd,OAAA;MACA;QACA,KAAAkB,QAAA,CAAAK,OAAA;QACA,WAAAV,WAAA;MACA;IACA;IACA;IACAqD,mBAAA;MACA,MAAAC,IAAA;MACAA,IAAA,CAAAvB,KAAA,CAAAwB,gBAAA,CAAAC,UAAA;MACAF,IAAA,CAAAvB,KAAA,CAAA0B,kBAAA,CAAAD,UAAA;MACAF,IAAA,CAAAvB,KAAA,CAAA2B,aAAA,CAAAC,OAAA;IACA;IAEA;IACAC,qBAAA;MACA,MAAAN,IAAA;MACAA,IAAA,CAAAvB,KAAA,CAAA2B,aAAA,CAAAC,OAAA;IACA;IACA;IACAE,oBAAA;MACA,MAAAP,IAAA;MACAA,IAAA,CAAAvB,KAAA,CAAA2B,aAAA,CAAAC,OAAA;MACAL,IAAA,CAAAvB,KAAA,CAAAwB,gBAAA,CAAAC,UAAA;MACAF,IAAA,CAAAvB,KAAA,CAAA0B,kBAAA,CAAAK,UAAA;IACA;IACA;IACAC,kBAAA;MACA,MAAAT,IAAA;MACAA,IAAA,CAAAvB,KAAA,CAAA2B,aAAA,CAAAC,OAAA;MACAL,IAAA,CAAAvB,KAAA,CAAA0B,kBAAA,CAAAD,UAAA;MACAF,IAAA,CAAAvB,KAAA,CAAAwB,gBAAA,CAAAO,UAAA;IACA;IACA;IACAE,eAAAC,CAAA;MACA,MAAAX,IAAA;MACAA,IAAA,CAAAvB,KAAA,CAAA2B,aAAA,CAAAC,OAAA;IACA;EAEA;EACAO,QAAA;IACA,KAAAlE,WAAA;EACA;EACAmE,QAAA;IACAC,QAAA,CAAAC,gBAAA,eAAAL,cAAA;EACA;EACAM,cAAA;IACAF,QAAA,CAAAG,mBAAA,eAAAP,cAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}