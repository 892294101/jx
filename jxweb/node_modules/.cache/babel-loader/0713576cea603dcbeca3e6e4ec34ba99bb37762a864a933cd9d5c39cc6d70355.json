{"ast":null,"code":"export default {\n  data() {\n    return {\n      Loading: true,\n      ids: [],\n      single: true,\n      multiple: true,\n      showSearch: true,\n      total: 0,\n      queryParams: {},\n      sysOperationLogList: []\n    };\n  },\n  methods: {\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 查询列表\n    async getSysOperationLogList() {\n      this.Loading = true;\n      const {\n        data: res\n      } = await this.$api.querySysOperationLogList(this.queryParams);\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.sysOperationLogList = res.data.list;\n        this.total = res.data.total;\n        this.Loading = false;\n      }\n    },\n    // 搜索按钮操作\n    handleQuery() {\n      this.getSysOperationLogList();\n    },\n    // 重置按钮操作\n    resetQuery() {\n      this.queryParams = {};\n      this.getSysOperationLogList();\n      this.$message.success(\"重置成功\");\n    },\n    // pageSize\n    handleSizeChange(newSize) {\n      this.queryParams.pageSize = newSize;\n      this.getSysOperationLogList();\n    },\n    // pageNum\n    handleCurrentChange(newPage) {\n      this.queryParams.pageNum = newPage;\n      this.getSysOperationLogList();\n    },\n    // 清空\n    async handleClean() {\n      const confirmResult = await this.$confirm('是否清空操作日志？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消');\n      }\n      const {\n        data: res\n      } = await this.$api.cleanSysOperationLog();\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.$message.success('清空成功');\n        await this.getSysOperationLogList();\n      }\n    },\n    // 删除\n    async handleDelete(id) {\n      const confirmResult = await this.$confirm('是否确认删除操作日志编号为\"' + id + '\"的数据项？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n      const {\n        data: res\n      } = await this.$api.deleteSysOperationLog(id);\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.$message.success('删除成功');\n        await this.getSysOperationLogList();\n      }\n    },\n    // 批量删除\n    async batchHandleDelete() {\n      const sysOperationLogIds = this.ids;\n      const confirmResult = await this.$confirm('是否确认删除操作日志编号为\"' + sysOperationLogIds + '\"的数据项？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err);\n      if (confirmResult !== 'confirm') {\n        return this.$message.info('已取消删除');\n      }\n      const {\n        data: res\n      } = await this.$api.batchDeleteSysOperationLog(sysOperationLogIds);\n      if (res.code !== 200) {\n        this.$message.error(res.message);\n      } else {\n        this.$message.success('删除成功');\n        await this.getSysOperationLogList();\n      }\n    },\n    // 用户名称鼠标滑过打开\n    usernameMouseenter() {\n      const that = this;\n      that.$refs.EndTimeStatusRef.hidePicker();\n      that.$refs.BeginTimeStatusRef.hidePicker();\n      that.$refs.PostStatusRef.visible = false;\n    },\n    // 开始时间鼠标滑过打开\n    beginTimeMouseenter() {\n      const that = this;\n      that.$refs.PostStatusRef.visible = false;\n      that.$refs.EndTimeStatusRef.hidePicker();\n      that.$refs.BeginTimeStatusRef.showPicker();\n    },\n    // 结束时间鼠标滑过打开\n    endTimeMouseenter() {\n      const that = this;\n      that.$refs.PostStatusRef.visible = false;\n      that.$refs.BeginTimeStatusRef.hidePicker();\n      that.$refs.EndTimeStatusRef.showPicker();\n    },\n    // 点击空白处关闭下拉框等\n    bodyCloseMenus(e) {\n      const that = this;\n      that.$refs.PostStatusRef.visible = false;\n      that.$refs.BeginTimeStatusRef.hidePicker();\n      that.$refs.EndTimeStatusRef.hidePicker();\n    }\n  },\n  created() {\n    this.getSysOperationLogList();\n  },\n  mounted() {\n    document.addEventListener(\"click\", this.bodyCloseMenus);\n  },\n  beforeDestroy() {\n    document.removeEventListener(\"click\", this.bodyCloseMenus);\n  }\n};","map":{"version":3,"names":["data","Loading","ids","single","multiple","showSearch","total","queryParams","sysOperationLogList","methods","handleSelectionChange","selection","map","item","id","length","getSysOperationLogList","res","$api","querySysOperationLogList","code","$message","error","message","list","handleQuery","resetQuery","success","handleSizeChange","newSize","pageSize","handleCurrentChange","newPage","pageNum","handleClean","confirmResult","$confirm","confirmButtonText","cancelButtonText","type","catch","err","info","cleanSysOperationLog","handleDelete","deleteSysOperationLog","batchHandleDelete","sysOperationLogIds","batchDeleteSysOperationLog","usernameMouseenter","that","$refs","EndTimeStatusRef","hidePicker","BeginTimeStatusRef","PostStatusRef","visible","beginTimeMouseenter","showPicker","endTimeMouseenter","bodyCloseMenus","e","created","mounted","document","addEventListener","beforeDestroy","removeEventListener"],"sources":["src/views/monitor/Operator.vue"],"sourcesContent":["<template>\r\n  <el-card>\r\n    <!--条件搜索区域-->\r\n    <el-form size=\"mini\" :model=\"queryParams\" :inline=\"true\" v-show=\"showSearch\">\r\n      <el-form-item prop=\"username\" label=\"用户名称\">\r\n        <el-input @mouseenter.native=\"usernameMouseenter\" class=\"searchList\" v-model=\"queryParams.username\" placeholder=\"请输入用户名称\" clearable size=\"mini\"\r\n                  @keyup.enter.native=\"handleQuery\"/>\r\n      </el-form-item>\r\n      <el-form-item prop=\"beginTime\" label=\"开始时间\">\r\n        <el-date-picker id=\"beginTime\" @mouseenter.native=\"beginTimeMouseenter\" ref=\"BeginTimeStatusRef\"\r\n                        class=\"input-width\" v-model=\"queryParams.beginTime\" size=\"mini\" type=\"date\"\r\n                        style=\"width: 135px\" value-format=\"yyyy-MM-dd\" clearable placeholder=\"请选择开始时间\"\r\n                        @keyup.enter.native=\"handleQuery\"></el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item prop=\"endTime\" label=\"结束时间\">\r\n        <el-date-picker id=\"endTime\" @mouseenter.native=\"endTimeMouseenter\" ref=\"EndTimeStatusRef\"\r\n                        class=\"input-width\" v-model=\"queryParams.endTime\" size=\"mini\" type=\"date\"\r\n                        style=\"width: 135px\" value-format=\"yyyy-MM-dd\" clearable placeholder=\"请选择结束时间\"\r\n                        @keyup.enter.native=\"handleQuery\"></el-date-picker>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\r\n        <el-button type=\"primary\" icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n    <!--操作按钮-->\r\n    <el-row :gutter=\"10\" class=\"mb8\">\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" :disabled=\"multiple\"\r\n                   @click=\"batchHandleDelete\" v-authority=\"['monitor:operator:delete']\">删除\r\n        </el-button>\r\n      </el-col>\r\n      <el-col :span=\"1.5\">\r\n        <el-button type=\"danger\" plain icon=\"el-icon-delete\" size=\"mini\" @click=\"handleClean\"\r\n                   v-authority=\"['monitor:operator:clean']\">清空\r\n        </el-button>\r\n      </el-col>\r\n    </el-row>\r\n    <!--列表区域-->\r\n    <el-table size=\"mini\" v-loading=\"Loading\" :data=\"sysOperationLogList\" border stripe style=\"width: 100%\"\r\n              :header-cell-style=\"{ background: '#eef1f6', color: '#606266' }\" @selection-change=\"handleSelectionChange\">\r\n      <el-table-column type=\"selection\"/>\r\n      <el-table-column label=\"ID\" prop=\"id\" v-if=\"false\"/>\r\n      <el-table-column label=\"用户账号\" prop=\"username\"/>\r\n      <el-table-column label=\"请求方式\" prop=\"method\"/>\r\n      <el-table-column label=\"登录IP\" prop=\"Ip\"/>\r\n      <el-table-column label=\"请求的URL\" prop=\"Url\" width=\"auto\" min-width=\"200\"/>\r\n      <el-table-column label=\"操作时间\" prop=\"createTime\" width=\"auto\" min-width=\"120\"/>\r\n      <el-table-column label=\"更多操作\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"small\" type=\"text\" icon=\"el-icon-delete\" @click=handleDelete(scope.row.id)\r\n                     v-authority=\"['monitor:operator:delete']\">删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!--分页区域-->\r\n    <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                   :current-page=\"queryParams.pageNum\" :page-sizes=\"[10, 50, 100, 500, 1000]\" :page-size=\"queryParams.pageSize\"\r\n                   layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n    </el-pagination>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      Loading: true,\r\n      ids: [],\r\n      single: true,\r\n      multiple: true,\r\n      showSearch: true,\r\n      total: 0,\r\n      queryParams: {},\r\n      sysOperationLogList: [],\r\n    }\r\n  },\r\n  methods: {\r\n    // 多选框选中数据\r\n    handleSelectionChange(selection) {\r\n      this.ids = selection.map(item => item.id);\r\n      this.single = selection.length != 1;\r\n      this.multiple = !selection.length;\r\n    },\r\n    // 查询列表\r\n    async getSysOperationLogList() {\r\n      this.Loading = true\r\n      const {data: res} = await this.$api.querySysOperationLogList(this.queryParams)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.sysOperationLogList = res.data.list\r\n        this.total = res.data.total\r\n        this.Loading = false\r\n      }\r\n    },\r\n    // 搜索按钮操作\r\n    handleQuery() {\r\n      this.getSysOperationLogList();\r\n    },\r\n    // 重置按钮操作\r\n    resetQuery() {\r\n      this.queryParams = {}\r\n      this.getSysOperationLogList();\r\n      this.$message.success(\"重置成功\")\r\n    },\r\n    // pageSize\r\n    handleSizeChange(newSize) {\r\n      this.queryParams.pageSize = newSize\r\n      this.getSysOperationLogList()\r\n    },\r\n    // pageNum\r\n    handleCurrentChange(newPage) {\r\n      this.queryParams.pageNum = newPage\r\n      this.getSysOperationLogList()\r\n    },\r\n    // 清空\r\n    async handleClean() {\r\n      const confirmResult = await this.$confirm('是否清空操作日志？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消')\r\n      }\r\n      const {data: res} = await this.$api.cleanSysOperationLog()\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.$message.success('清空成功')\r\n        await this.getSysOperationLogList()\r\n      }\r\n    },\r\n    // 删除\r\n    async handleDelete(id) {\r\n      const confirmResult = await this.$confirm('是否确认删除操作日志编号为\"' + id + '\"的数据项？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      const {data: res} = await this.$api.deleteSysOperationLog(id)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.$message.success('删除成功')\r\n        await this.getSysOperationLogList()\r\n      }\r\n    },\r\n    // 批量删除\r\n    async batchHandleDelete() {\r\n      const sysOperationLogIds = this.ids;\r\n      const confirmResult = await this.$confirm('是否确认删除操作日志编号为\"' + sysOperationLogIds + '\"的数据项？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).catch(err => err)\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除')\r\n      }\r\n      const {data: res} = await this.$api.batchDeleteSysOperationLog(sysOperationLogIds)\r\n      if (res.code !== 200) {\r\n        this.$message.error(res.message)\r\n      } else {\r\n        this.$message.success('删除成功')\r\n        await this.getSysOperationLogList()\r\n      }\r\n    },\r\n    // 用户名称鼠标滑过打开\r\n    usernameMouseenter() {\r\n      const that = this\r\n      that.$refs.EndTimeStatusRef.hidePicker()\r\n      that.$refs.BeginTimeStatusRef.hidePicker()\r\n      that.$refs.PostStatusRef.visible = false\r\n    },\r\n\r\n    // 开始时间鼠标滑过打开\r\n    beginTimeMouseenter() {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = false\r\n      that.$refs.EndTimeStatusRef.hidePicker()\r\n      that.$refs.BeginTimeStatusRef.showPicker()\r\n    },\r\n    // 结束时间鼠标滑过打开\r\n    endTimeMouseenter() {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = false\r\n      that.$refs.BeginTimeStatusRef.hidePicker()\r\n      that.$refs.EndTimeStatusRef.showPicker()\r\n    },\r\n    // 点击空白处关闭下拉框等\r\n    bodyCloseMenus(e) {\r\n      const that = this\r\n      that.$refs.PostStatusRef.visible = false\r\n      that.$refs.BeginTimeStatusRef.hidePicker()\r\n      that.$refs.EndTimeStatusRef.hidePicker()\r\n    },\r\n  },\r\n  created() {\r\n    this.getSysOperationLogList()\r\n  },\r\n  mounted() {\r\n    document.addEventListener(\"click\", this.bodyCloseMenus)\r\n  },\r\n  beforeDestroy() {\r\n    document.removeEventListener(\"click\", this.bodyCloseMenus);\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped></style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}